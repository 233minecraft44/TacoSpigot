From 1cfc5c23acbad4f5891d975d0d67aa6302d0d46a Mon Sep 17 00:00:00 2001
From: Techcable <Techcable@outlook.com>
Date: Thu, 30 Jul 2015 18:12:29 -0700
Subject: [PATCH] Allow plugins to replace spigot anti-XRay


diff --git a/src/main/java/net/techcable/tacospigot/BlockData.java b/src/main/java/net/techcable/tacospigot/BlockData.java
new file mode 100644
index 0000000..ff0d078
--- /dev/null
+++ b/src/main/java/net/techcable/tacospigot/BlockData.java
@@ -0,0 +1,42 @@
+package net.techcable.tacospigot;
+
+import org.bukkit.Material;
+
+public class BlockData {
+    private final Material type;
+    private final int metadata;
+
+    public BlockData(int blockId, int metadata) {
+        this(Material.getMaterial(blockId), metadata);
+    }
+
+    public BlockData(Material type, int metadata) {
+        this.type = type;
+        this.metadata = metadata;
+    }
+
+    public Material getType() {
+        return type;
+    }
+
+    public int getBlockId() {
+        return getType().getId();
+    }
+
+    public int getMetadata() {
+        return metadata;
+    }
+
+    public BlockData withType(Material type) {
+        return new BlockData(type, metadata);
+    }
+
+    public BlockData withBlockId(int blockId) {
+        return withType(Material.getMaterial(blockId));
+    }
+
+    public BlockData withMetadata(int metadata) {
+        return new BlockData(type, metadata);
+    }
+
+}
diff --git a/src/main/java/net/techcable/tacospigot/xray/AntiXRayEngine.java b/src/main/java/net/techcable/tacospigot/xray/AntiXRayEngine.java
new file mode 100644
index 0000000..0947c67
--- /dev/null
+++ b/src/main/java/net/techcable/tacospigot/xray/AntiXRayEngine.java
@@ -0,0 +1,65 @@
+package net.techcable.tacospigot.xray;
+
+import net.techcable.tacospigot.BlockData;
+
+import org.bukkit.World;
+import org.bukkit.entity.Player;
+
+/**
+ * An anti-XRay engine that hides blocks in some way
+ * <p/>
+ * Can be set with {@link org.bukkit.World#setAntiXRayEngine(AntiXRayEngine)}
+ */
+public interface AntiXRayEngine {
+
+    /**
+     * Notify the anti-XRay engine of a block change
+     * <p>
+     * Implementations should re-check any assumptions they made about nearby blocks when this is called
+     * This method will always be called on the main thread
+     * </p>
+     *
+     * @param world the world where the block was changed
+     * @param x the x position where the block was changed
+     * @param y the y position where the block was changed
+     * @param z the z position where the block was changed
+     */
+    public void onBlockChange(World world, int x, int y, int z);
+
+    /**
+     * Modify/hide the given block
+     * <p>
+     * This method will always be called from the main thread
+     * The results of this method do not actually change the block on the disk or in memory, only what the player sees
+     * </p>
+     *
+     * @param player the player viewing this block
+     * @param world the world to modify the data in
+     * @param x the x position of the block to modify
+     * @param y the y position of the block to modify
+     * @param z the z position of the block to modify
+     * @param data the block to modify
+     *
+     * @return the modified data, or null if no modification needed
+     */
+    public BlockData obfuscateSync(Player player, World world, int x, int y, int z, BlockData data);
+
+    /**
+     * Modify/hide the given block
+     * <p>
+     * This method may be called from any thread except the main thread
+     * The results of this method do not actually change the block on the disk or in memory, only what the player sees
+     * </p>
+     *
+     * @param player the player viewing this block
+     * @param world the world to modify the data in
+     * @param x the x position of the block to modify
+     * @param y the y position of the block to modify
+     * @param z the z position of the block to modify
+     * @param data the block to modify
+     *
+     * @return the modified data, or null if no modification needed
+     */
+    public BlockData obfuscate(Player player, World world, int x, int y, int z, BlockData data);
+
+}
diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java
index 09d34c7..480f205 100644
--- a/src/main/java/org/bukkit/World.java
+++ b/src/main/java/org/bukkit/World.java
@@ -1,5 +1,7 @@
 package org.bukkit;
 
+import net.techcable.tacospigot.xray.AntiXRayEngine; // TacoSpigot
+
 import java.io.File;
 import org.bukkit.generator.ChunkGenerator;
 import java.util.Collection;
@@ -1347,6 +1349,36 @@ public interface World extends PluginMessageRecipient, Metadatable {
     public int getLastKnownMeta(Location loc) throws ChunkNotLoadedException;
 
     // TacoSpigot end
+    // TacoSpigot start - anti-XRay engine getters and setters
+
+    /**
+     * Set the world's anti-XRay engine
+     * <p>
+     * A value of null disables anti-XRay
+     * </p>
+     *
+     * @param engine the new anti-XRay engine
+     */
+    public void setAntiXRayEngine(AntiXRayEngine engine);
+
+    /**
+     * Get the world's anti-XRay engine
+     * <p>
+     * A value of null indicates that anti-XRaying is disabled
+     * </p>
+     *
+     * @return the current anti-XRay engine
+     */
+    public AntiXRayEngine getAntiXRayEngine();
+
+    /**
+     * Return the anti-XRay engine provided by the server implementation, or null if none is provided
+     *
+     * @return the anti-XRay engine provided by the server implementation, or null
+     */
+    public AntiXRayEngine getDefaultAntiXRayEngine();
+
+    // TacoSpigot end
 
     /**
      * Represents various map environment types that a world may be
-- 
2.4.6.windows.1

