From 41a6870e7dabef51fa0a98ab970885489af3f509 Mon Sep 17 00:00:00 2001
From: Techcable <Techcable@outlook.com>
Date: Tue, 6 Oct 2015 16:42:52 -0700
Subject: [PATCH] Infinite map ids


diff --git a/src/main/java/org/bukkit/Server.java b/src/main/java/org/bukkit/Server.java
index 26acdda..d03b28c 100644
--- a/src/main/java/org/bukkit/Server.java
+++ b/src/main/java/org/bukkit/Server.java
@@ -1,6 +1,6 @@
 package org.bukkit;
 
-import java.awt.image.BufferedImage;
+import java.awt.image.*;
 import java.io.File;
 import java.io.Serializable;
 import java.util.Collection;
@@ -12,6 +12,9 @@ import java.util.Set;
 import java.util.UUID;
 import java.util.logging.Logger;
 
+import com.avaje.ebean.config.ServerConfig;
+import com.google.common.collect.ImmutableList;
+
 import org.bukkit.Warning.WarningState;
 import org.bukkit.command.CommandException;
 import org.bukkit.command.CommandSender;
@@ -21,11 +24,14 @@ import org.bukkit.entity.Entity;
 import org.bukkit.entity.Player;
 import org.bukkit.event.inventory.InventoryType;
 import org.bukkit.event.server.ServerListPingEvent;
+import org.bukkit.generator.ChunkGenerator;
 import org.bukkit.help.HelpMap;
 import org.bukkit.inventory.Inventory;
 import org.bukkit.inventory.InventoryHolder;
+import org.bukkit.inventory.ItemFactory;
 import org.bukkit.inventory.ItemStack;
 import org.bukkit.inventory.Recipe;
+import org.bukkit.inventory.meta.ItemMeta;
 import org.bukkit.map.MapView;
 import org.bukkit.permissions.Permissible;
 import org.bukkit.plugin.PluginManager;
@@ -36,13 +42,6 @@ import org.bukkit.scheduler.BukkitScheduler;
 import org.bukkit.scoreboard.ScoreboardManager;
 import org.bukkit.util.CachedServerIcon;
 
-import com.avaje.ebean.config.ServerConfig;
-import com.google.common.collect.ImmutableList;
-import org.bukkit.generator.ChunkGenerator;
-
-import org.bukkit.inventory.ItemFactory;
-import org.bukkit.inventory.meta.ItemMeta;
-
 /**
  * Represents a server implementation.
  */
@@ -426,6 +425,16 @@ public interface Server extends PluginMessageRecipient {
     @Deprecated
     public MapView getMap(short id);
 
+    // TacoSpigot start
+    /**
+     * Gets the map from the given map id
+     *
+     * @param id the id of the map to get
+     * @return a map view with the given id if it exists, or null if it doesn't
+     */
+    public MapView getMap(UUID id);
+    // TacoSpigot end
+
     /**
      * Create a new map with an automatically assigned ID.
      *
diff --git a/src/main/java/org/bukkit/inventory/meta/MapMeta.java b/src/main/java/org/bukkit/inventory/meta/MapMeta.java
index fb5c297..6151b14 100644
--- a/src/main/java/org/bukkit/inventory/meta/MapMeta.java
+++ b/src/main/java/org/bukkit/inventory/meta/MapMeta.java
@@ -1,5 +1,7 @@
 package org.bukkit.inventory.meta;
 
+import java.util.UUID;
+
 /**
  * Represents a map that can be scalable.
  */
@@ -20,4 +22,24 @@ public interface MapMeta extends ItemMeta {
     void setScaling(boolean value);
 
     MapMeta clone();
+
+    // TacoSpigot start
+    /**
+     * Set the map's uuid
+     * <p/>
+     * Accepts legacy ids
+     *
+     * @param mapId the map's id
+     */
+    public void setMapId(UUID mapId);
+
+    /**
+     * Get the maps uuid
+     * <p/>
+     * May return a legacy id
+     *
+     * @return the map's id
+     */
+    public UUID getMapId();
+    // TacoSpigot end
 }
diff --git a/src/main/java/org/bukkit/map/MapView.java b/src/main/java/org/bukkit/map/MapView.java
index 65c4159..e50959b 100644
--- a/src/main/java/org/bukkit/map/MapView.java
+++ b/src/main/java/org/bukkit/map/MapView.java
@@ -2,6 +2,7 @@ package org.bukkit.map;
 
 import java.util.List;
 import org.bukkit.World;
+import java.util.UUID; // TacoSpigot
 
 /**
  * Represents a map item.
@@ -60,10 +61,52 @@ public interface MapView {
      * in an inventory.
      *
      * @return The ID of the map.
-     * @deprecated Magic value
+     * @throws IllegalArgumentException if this map doesn't have a short id
+     * @deprecated use UUIDs instead
      */
     @Deprecated
     public short getId();
+    // TacoSpigot start
+    public static final int LEGACY_MAGIC = 0x01d234af8;
+    /**
+     * Convert the uuid to a legacy id
+     * <p>
+     * Implementations are required to confirm to this specification
+     *
+     * @throws IllegalArgumentException if the id can't be represented as a legacy id
+     * @return the legacy id
+     */
+    public static short toLegacyId(UUID id) {
+        if (!isLegacyId(id)) throw new IllegalArgumentException();
+        return (short) id.getLeastSignificantBits();
+    }
+
+    public static boolean isLegacyId(UUID id) {
+        if ((id.getMostSignificantBits() & 0xFFFFFFFF00000000L) != 0) return false;
+        if (((int) id.getMostSignificantBits()) != LEGACY_MAGIC) return false;
+        if ((id.getLeastSignificantBits() & 0xFFFFFFFFFFFF0000L) != 0) return false;
+        return true;
+    }
+
+    /**
+     * Convert the legacy id to a uuid
+     * <p>
+     * Implementations are required to confirm to this specification
+     *
+     * @param legacy the legacy id
+     * @return the new id
+     */
+    public static UUID fromLegacyId(short legacy) {
+        return new UUID(LEGACY_MAGIC, legacy);
+    }
+
+    /**
+     * Return the map's unique id
+     *
+     * @return the map's unique id
+     */
+    public UUID getUniqueId();
+    // TacoSpigot end
 
     /**
      * Check whether this map is virtual. A map is virtual if its lowermost
-- 
2.6.1.windows.1

