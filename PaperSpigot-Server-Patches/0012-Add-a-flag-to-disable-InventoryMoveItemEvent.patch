From 77e88fc1288c4f03c92cc44eaccb8addfcd832ba Mon Sep 17 00:00:00 2001
From: Techcable <Techcable@outlook.com>
Date: Mon, 24 Aug 2015 22:37:36 -0700
Subject: [PATCH] Add a flag to disable InventoryMoveItemEvent

Even with no listeners, InventoryMoveItemEvent hurts performance.
This patch prevents the event from firing if there are no listeners
Some plugins offer no way to disable their IMIE listeners. (See WorldGuard-3520)
This patch adds a per-world flag to disable InventoryMoveItemEvent for hoppers.

When the event is disabled, the overhead of cloning, and TileEntity.getOwner()

diff --git a/src/main/java/net/minecraft/server/TileEntityHopper.java b/src/main/java/net/minecraft/server/TileEntityHopper.java
index 05abdaf..bfdea4f 100644
--- a/src/main/java/net/minecraft/server/TileEntityHopper.java
+++ b/src/main/java/net/minecraft/server/TileEntityHopper.java
@@ -265,9 +265,14 @@ public class TileEntityHopper extends TileEntityContainer implements IHopper, IU
                     if (this.getItem(i) != null) {
                         ItemStack itemstack = this.getItem(i).cloneItemStack();
                         // ItemStack itemstack1 = addItem(iinventory, this.splitStack(i, 1), enumdirection);
-
+                        // TacoSpigot start - add an option to turn of InventoryMoveItemEvent
+                        InventoryMoveItemEvent event = null;
+                        CraftItemStack oitemstack = null;
+                        ItemStack nmsOriginalItemStack = this.splitStack(i, world.spigotConfig.hopperAmount);
+                        if (HopperHelper.isFireInventoryMoveItemEvent(this)) {
                         // CraftBukkit start - Call event when pushing items into other inventories
-                        CraftItemStack oitemstack = CraftItemStack.asCraftMirror(this.splitStack(i, world.spigotConfig.hopperAmount)); // Spigot
+                        oitemstack = CraftItemStack.asCraftMirror(nmsOriginalItemStack);
+                        // TacoSpigot end
 
                         Inventory destinationInventory;
                         // Have to special case large chests as they work oddly
@@ -277,18 +282,21 @@ public class TileEntityHopper extends TileEntityContainer implements IHopper, IU
                             destinationInventory = iinventory.getOwner().getInventory();
                         }
 
-                        InventoryMoveItemEvent event = new InventoryMoveItemEvent(this.getOwner().getInventory(), oitemstack.clone(), destinationInventory, true);
+                        event = new InventoryMoveItemEvent(this.getOwner().getInventory(), oitemstack.clone(), destinationInventory, true); // TacoSpigot - declare event above
                         this.getWorld().getServer().getPluginManager().callEvent(event);
                         if (event.isCancelled()) {
                             this.setItem(i, itemstack);
                             this.d(world.spigotConfig.hopperTransfer); // Spigot
                             return false;
                         }
-                        int origCount = event.getItem().getAmount(); // Spigot
-                        ItemStack itemstack1 = addItem(iinventory, CraftItemStack.asNMSCopy(event.getItem()), enumdirection);
+                        // TacoSpigot start - handle cases where the event is not fired
+                        }
+                        int origCount = event != null ? event.getItem().getAmount() : nmsOriginalItemStack.count; // Spigot
+                        ItemStack itemstack1 = addItem(iinventory, event != null ? CraftItemStack.asNMSCopy(event.getItem()) : nmsOriginalItemStack, enumdirection);
+                        // TacoSpigot end
 
                         if (itemstack1 == null || itemstack1.count == 0) {
-                            if (event.getItem().equals(oitemstack)) {
+                            if (event == null || event.getItem().equals(oitemstack)) { // TacoSpigot - handle whenever the event wasn't fired
                                 iinventory.update();
                             } else {
                                 this.setItem(i, itemstack);
@@ -420,8 +428,14 @@ public class TileEntityHopper extends TileEntityContainer implements IHopper, IU
         if (itemstack != null && b(iinventory, itemstack, i, enumdirection)) {
             ItemStack itemstack1 = itemstack.cloneItemStack();
             // ItemStack itemstack2 = addItem(ihopper, iinventory.splitStack(i, 1), (EnumDirection) null);
+            // TacoSpigot start - add an option to turn of InventoryMoveItemEvent
+            InventoryMoveItemEvent event = null;
+            CraftItemStack oitemstack = null;
+            ItemStack nmsOriginalItemStack = iinventory.splitStack(i, ihopper.getWorld().spigotConfig.hopperAmount);
+            if (HopperHelper.isFireInventoryMoveItemEvent(ihopper)) {
             // CraftBukkit start - Call event on collection of items from inventories into the hopper
-            CraftItemStack oitemstack = CraftItemStack.asCraftMirror(iinventory.splitStack(i, ihopper.getWorld().spigotConfig.hopperAmount)); // Spigot
+            oitemstack = CraftItemStack.asCraftMirror(nmsOriginalItemStack);
+            // TacoSpigot end
 
             Inventory sourceInventory;
             // Have to special case large chests as they work oddly
@@ -431,7 +445,7 @@ public class TileEntityHopper extends TileEntityContainer implements IHopper, IU
                 sourceInventory = iinventory.getOwner().getInventory();
             }
 
-            InventoryMoveItemEvent event = new InventoryMoveItemEvent(sourceInventory, oitemstack.clone(), ihopper.getOwner().getInventory(), false);
+            event = new InventoryMoveItemEvent(sourceInventory, oitemstack.clone(), ihopper.getOwner().getInventory(), false); // TacoSpigot - declare above
 
             ihopper.getWorld().getServer().getPluginManager().callEvent(event);
             if (event.isCancelled()) {
@@ -447,9 +461,14 @@ public class TileEntityHopper extends TileEntityContainer implements IHopper, IU
             int origCount = event.getItem().getAmount(); // Spigot
             ItemStack itemstack2 = addItem(ihopper, CraftItemStack.asNMSCopy(event.getItem()), null);
             if (ihopper instanceof TileEntityHopper) ((TileEntityHopper) ihopper).needsUpdate = true; // TacoSpigot - update the hopper needed
+            // TacoSpigot start - handle cases where the event is not fired
+            }
+            int origCount = event != null ? event.getItem().getAmount() : nmsOriginalItemStack.count; // Spigot
+            ItemStack itemstack2 = addItem(ihopper, event != null ? CraftItemStack.asNMSCopy(event.getItem()) : nmsOriginalItemStack, null);
+            // TacoSpigot end
 
             if (itemstack2 == null || itemstack2.count == 0) {
-                if (event.getItem().equals(oitemstack)) {
+                if (event == null || event.getItem().equals(oitemstack)) { // TacoSpigot - handle when the event is not fired
                     iinventory.update();
                 } else {
                     iinventory.setItem(i, itemstack1);
diff --git a/src/main/java/net/techcable/tacospigot/HopperHelper.java b/src/main/java/net/techcable/tacospigot/HopperHelper.java
index 4b5e956..6098a3c 100644
--- a/src/main/java/net/techcable/tacospigot/HopperHelper.java
+++ b/src/main/java/net/techcable/tacospigot/HopperHelper.java
@@ -9,6 +9,7 @@ import net.minecraft.server.ChunkSection;
 import net.minecraft.server.Entity;
 import net.minecraft.server.EntityItem;
 import net.minecraft.server.IBlockData;
+import net.minecraft.server.IHopper;
 import net.minecraft.server.IInventory;
 import net.minecraft.server.InventoryLargeChest;
 import net.minecraft.server.MathHelper;
@@ -17,6 +18,7 @@ import net.minecraft.server.TileEntityChest;
 import net.minecraft.server.TileEntityHopper;
 import net.minecraft.server.World;
 import org.bukkit.Material;
+import org.bukkit.event.inventory.InventoryMoveItemEvent;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -152,4 +154,7 @@ public class HopperHelper {
         return positions;
     }
 
+    public static boolean isFireInventoryMoveItemEvent(IHopper hopper) {
+        return hopper.getWorld().tacoSpigotConfig.isHopperFireIMIE && InventoryMoveItemEvent.getHandlerList().getRegisteredListeners().length > 0;
+    }
 }
diff --git a/src/main/java/net/techcable/tacospigot/TacoSpigotWorldConfig.java b/src/main/java/net/techcable/tacospigot/TacoSpigotWorldConfig.java
index 52c5096..2651602 100644
--- a/src/main/java/net/techcable/tacospigot/TacoSpigotWorldConfig.java
+++ b/src/main/java/net/techcable/tacospigot/TacoSpigotWorldConfig.java
@@ -74,6 +74,11 @@ public class TacoSpigotWorldConfig {
         isEntityDoSlowHopperLookup = getBoolean("hopper.entities-do-slow-lookup", false);
     }
 
+    public boolean isHopperFireIMIE;
+    private void isHopperFireIMIE() {
+        isHopperFireIMIE = getBoolean("hopper.fire-InventoryMoveItemEvent", true);
+    }
+
     public boolean optimizeArmorStandMovement;
     private void isArmorStandMoveWithoutGravity() {
         optimizeArmorStandMovement = getBoolean("armor-stand.optimize-movement", false); // Doesn't fully emulate vanilla behavior, see issue #1
-- 
2.4.6.windows.1.812.gd1b00d3

