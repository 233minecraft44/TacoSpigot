From 7cc8e90ec4823302a63a50763a0160ad89a70f70 Mon Sep 17 00:00:00 2001
From: Techcable <Techcable@outlook.com>
Date: Thu, 30 Jul 2015 23:57:17 -0700
Subject: [PATCH] Implement async block retrieval api


diff --git a/src/main/java/net/techcable/tacospigot/ShortHashStrategy.java b/src/main/java/net/techcable/tacospigot/ShortHashStrategy.java
new file mode 100644
index 0000000..b0c9baa
--- /dev/null
+++ b/src/main/java/net/techcable/tacospigot/ShortHashStrategy.java
@@ -0,0 +1,19 @@
+package net.techcable.tacospigot;
+
+public interface ShortHashStrategy {
+    public int hash(short s);
+
+    public static class DefaultShortHashStrategy implements ShortHashStrategy {
+        private DefaultShortHashStrategy() {}
+
+        @Override
+        public int hash(short s) {
+            return s;
+        }
+
+        private static final DefaultShortHashStrategy instance = new DefaultShortHashStrategy();
+        public static DefaultShortHashStrategy getInstance() {
+            return instance;
+        }
+    }
+}
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftChunk.java b/src/main/java/org/bukkit/craftbukkit/CraftChunk.java
index 8a33e28..7e49bcc 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftChunk.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftChunk.java
@@ -308,4 +308,28 @@ public class CraftChunk implements Chunk {
     static {
         Arrays.fill(emptySkyLight, (byte) 0xFF);
     }
+
+    // TacoSpigot start
+    private int getCombinedId(int x, int y, int z) {
+        int sectionId = y >> 4;
+        if (sectionId < 0 || sectionId > 15) throw new IllegalArgumentException("Illegal y: " + y);
+        ChunkSection section = getHandle().getSections()[sectionId];
+        return section.getIdArray()[y << 8 | z << 4 | x];
+    }
+
+    public int getLastKnownBlockId(int x, int y, int z) {
+        return getCombinedId(x, y, z) >> 4;
+    }
+
+    @Override
+    public org.bukkit.Material getLastKnownMaterial(int x, int y, int z) {
+        int blockId = getLastKnownBlockId(x, y, z);
+        return org.bukkit.Material.getMaterial(blockId);
+    }
+
+    @Override
+    public int getLastKnownMeta(int x, int y, int z) {
+        return getCombinedId(x, y, z) & 0xF;
+    }
+    // TacoSpigot end
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
index 4402d57..b154707 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
@@ -13,6 +13,7 @@ import java.util.Set;
 import java.util.UUID;
 
 import net.minecraft.server.*;
+import net.techcable.tacospigot.error.ChunkNotLoadedException; // TacoSpigot
 
 import org.apache.commons.lang.Validate;
 import org.bukkit.BlockChangeDelegate;
@@ -1500,4 +1501,33 @@ public class CraftWorld implements World {
         return spigot;
     }
     // Spigot end
+    // TacoSpigot start - async block retrieval api
+    @Override
+    public int getLastKnownMeta(Location loc) throws ChunkNotLoadedException {
+        return getLastKnownMeta(loc.getBlockX(), loc.getBlockY(), loc.getBlockZ());
+    }
+
+    @Override
+    public int getLastKnownMeta(int x, int y, int z) throws ChunkNotLoadedException {
+        net.minecraft.server.Chunk chunk = getHandle().getChunkIfLoaded(x, z);
+        if (chunk == null) throw new ChunkNotLoadedException();
+        Chunk wrapper = chunk.bukkitChunk;
+        return wrapper.getLastKnownMeta(x & 0xF, y, z & 0xF);
+    }
+
+    @Override
+    public org.bukkit.Material getLastKnownMaterial(Location loc) throws ChunkNotLoadedException {
+        return getLastKnownMaterial(loc.getBlockX(), loc.getBlockY(), loc.getBlockZ());
+    }
+
+    @Override
+    public org.bukkit.Material getLastKnownMaterial(int x, int y, int z) throws ChunkNotLoadedException {
+        net.minecraft.server.Chunk chunk = getHandle().getChunkIfLoaded(x, z);
+        if (chunk == null) throw new ChunkNotLoadedException();
+        Chunk wrapper = chunk.bukkitChunk;
+        Preconditions.checkNotNull(wrapper, "Null chunk wrapper for %s %s", chunk.locX, chunk.locZ);
+        return wrapper.getLastKnownMaterial(x & 0xF, y, z & 0xF);
+    }
+
+    // TacoSpigot end
 }
-- 
2.6.1.windows.1

