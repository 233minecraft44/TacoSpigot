From b40d53ea6d0973b1221df5abaefd43df527a7031 Mon Sep 17 00:00:00 2001
From: Techcable <Techcable@outlook.com>
Date: Mon, 27 Jul 2015 19:40:36 -0700
Subject: [PATCH] Optimize armor stands

Armor stands try and move() every tick, even without gravity, which can add up fast on servers with a lot of armor stands.
This patch adds an option to only move() when they are not on the ground (so they still have gravity), elimnating most of that lag.
Armor stands also do a BB lookup for minecarts to collide with, which can be very expensive on servers with lots of armor stands.
This patch also adds an option to make the minecarts look for armor stands which will help on servers with more armor stands than minecarts. (the greater the difference the gerater the change).

diff --git a/src/main/java/net/minecraft/server/EntityArmorStand.java b/src/main/java/net/minecraft/server/EntityArmorStand.java
index cd57d69..bf51cf3 100644
--- a/src/main/java/net/minecraft/server/EntityArmorStand.java
+++ b/src/main/java/net/minecraft/server/EntityArmorStand.java
@@ -245,18 +245,21 @@ public class EntityArmorStand extends EntityLiving {
     protected void s(Entity entity) {}
 
     protected void bL() {
-        List list = this.world.getEntities(this, this.getBoundingBox());
+        // TacoSpigot start -- Add an option to take the BB load over to the minecarts, which there may be less of
+        if (getWorld().tacoSpigotConfig.isArmorStandLookForMinecart) {
+            List list = this.world.getEntities(this, this.getBoundingBox());
 
-        if (list != null && !list.isEmpty()) {
-            for (int i = 0; i < list.size(); ++i) {
-                Entity entity = (Entity) list.get(i);
+            if (list != null && !list.isEmpty()) {
+                for (int i = 0; i < list.size(); ++i) {
+                    Entity entity = (Entity) list.get(i);
 
-                if (entity instanceof EntityMinecartAbstract && ((EntityMinecartAbstract) entity).s() == EntityMinecartAbstract.EnumMinecartType.RIDEABLE && this.h(entity) <= 0.2D) {
-                    entity.collide(this);
+                    if (entity instanceof EntityMinecartAbstract && ((EntityMinecartAbstract) entity).s() == EntityMinecartAbstract.EnumMinecartType.RIDEABLE && this.h(entity) <= 0.2D) {
+                        entity.collide(this);
+                    }
                 }
             }
         }
-
+        // TacoSpigot end
     }
 
     public boolean a(EntityHuman entityhuman, Vec3D vec3d) {
@@ -496,6 +499,7 @@ public class EntityArmorStand extends EntityLiving {
 
     public void t_() {
         super.t_();
+
         Vector3f vector3f = this.datawatcher.h(11);
 
         if (!this.headPose.equals(vector3f)) {
@@ -545,6 +549,7 @@ public class EntityArmorStand extends EntityLiving {
         }
 
         this.bj = flag;
+        doGravity(); // TacoSpigot - How did i break gravity?
     }
 
     private void a(boolean flag) {
@@ -705,4 +710,35 @@ public class EntityArmorStand extends EntityLiving {
     public boolean ad() {
         return super.ad() && !this.s();
     }
+
+    // TacoSpigot start -- Add an option to make armor stands (which usually don't move) only move when they are not above a block
+    @Override
+    public void move(double motX, double motY, double motZ) {
+        if (!getWorld().tacoSpigotConfig.isArmorStandMoveWithoutGravity && !isNeedGravity()) return;
+        super.move(motX, motY, motZ);
+    }
+
+    private void doGravity() {
+        if (!getWorld().tacoSpigotConfig.isArmorStandMoveWithoutGravity) return; // Handled by vanilla
+        if (isNeedGravity()) {
+            this.motY -= 0.08D;
+            if (this.inWater) {
+                this.motY *= 0.800000011920929D; // Water Drag
+            } else {
+                this.motY *= 0.5D; // Air Drag
+            }
+            move(motX, motY, motZ);
+        } else {
+            motY = 0;
+        }
+    }
+
+    private boolean isNeedGravity() {
+        if (!hasGravity()) return false;
+        if (MathHelper.floor(locY) != locY) return true; // We still can fall less than a block (or maybe more)
+        BlockPosition belowPos = new BlockPosition(locX, locY, locZ).down();
+        Block below = getWorld().getType(belowPos).getBlock();
+        return !below.getMaterial().isSolid();
+    }
+    // TacoSpigot end
 }
diff --git a/src/main/java/net/minecraft/server/EntityMinecartAbstract.java b/src/main/java/net/minecraft/server/EntityMinecartAbstract.java
index 4bf790c..8df9f73 100644
--- a/src/main/java/net/minecraft/server/EntityMinecartAbstract.java
+++ b/src/main/java/net/minecraft/server/EntityMinecartAbstract.java
@@ -13,6 +13,9 @@ import org.bukkit.event.vehicle.VehicleEntityCollisionEvent;
 import org.bukkit.util.Vector;
 // CraftBukkit end
 
+import com.google.common.base.Predicate; // TacoSpigot
+import java.util.List; // TacoSpigot
+
 public abstract class EntityMinecartAbstract extends Entity implements INamableTileEntity {
 
     private boolean a;
@@ -191,6 +194,26 @@ public abstract class EntityMinecartAbstract extends Entity implements INamableT
         float prevYaw = this.yaw;
         float prevPitch = this.pitch;
         // CraftBukkit end
+        // TacoSpigot start -- Add an option to take the BB load over to the minecarts, which there may be less of
+        if (!getWorld().tacoSpigotConfig.isArmorStandLookForMinecart && s() == EntityMinecartAbstract.EnumMinecartType.RIDEABLE) {
+            List list = this.world.a(this, this.getBoundingBox(), new Predicate<Entity>() {
+
+                @Override
+                public boolean apply(Entity entity) {
+                    return entity instanceof EntityArmorStand && entity.h(EntityMinecartAbstract.this) <= 0.2D;
+
+                }
+            });
+
+            if (list != null && !list.isEmpty()) {
+                for (int i = 0; i < list.size(); ++i) {
+                    EntityArmorStand stand = (EntityArmorStand) list.get(i);
+
+                    this.collide(stand);
+                }
+            }
+        }
+        // TacoSpigot end
         
         if (this.getType() > 0) {
             this.j(this.getType() - 1);
diff --git a/src/main/java/net/techcable/tacospigot/TacoSpigotWorldConfig.java b/src/main/java/net/techcable/tacospigot/TacoSpigotWorldConfig.java
index 871535f..4215d9a 100644
--- a/src/main/java/net/techcable/tacospigot/TacoSpigotWorldConfig.java
+++ b/src/main/java/net/techcable/tacospigot/TacoSpigotWorldConfig.java
@@ -68,4 +68,14 @@ public class TacoSpigotWorldConfig {
     private void isHopperPushBased() {
         isHopperPushBased = getBoolean("hopper.push-based", true);
     }
+
+    public boolean isArmorStandMoveWithoutGravity;
+    private void isArmorStandMoveWithoutGravity() {
+        isArmorStandMoveWithoutGravity = getBoolean("armor-stand.move-without-gravity", true); // Doesn't fully emulate vanilla behavior :(
+    }
+
+    public boolean isArmorStandLookForMinecart;
+    private void isArmorStandLookForMinecart() {
+        isArmorStandLookForMinecart = getBoolean("armor-stand.look-for-minecart", true); // Most servers will have more minecarts than armor stands
+    }
 }
-- 
2.4.6.windows.1

