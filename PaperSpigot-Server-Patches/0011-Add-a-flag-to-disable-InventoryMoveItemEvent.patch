From 6013d8f1d049d3be8108142cdf62aaa6908c9408 Mon Sep 17 00:00:00 2001
From: Techcable <Techcable@outlook.com>
Date: Wed, 3 Feb 2016 11:27:34 -0700
Subject: [PATCH] Add a flag to disable InventoryMoveItemEvent

Even with no listeners, InventoryMoveItemEvent hurts performance.
This patch prevents the event from firing if there are no listeners
Some plugins offer no way to disable their IMIE listeners. (See WorldGuard-3520)
This patch adds a per-world flag to disable InventoryMoveItemEvent for hoppers.

When the event is disabled, the overhead of cloning items, and various other things are avoided

diff --git a/src/main/java/net/minecraft/server/TileEntityHopper.java b/src/main/java/net/minecraft/server/TileEntityHopper.java
index 3fdc15d..767fa6c 100644
--- a/src/main/java/net/minecraft/server/TileEntityHopper.java
+++ b/src/main/java/net/minecraft/server/TileEntityHopper.java
@@ -265,8 +265,13 @@ public class TileEntityHopper extends TileEntityContainer implements IHopper, IU
                         ItemStack itemstack = this.getItem(i).cloneItemStack();
                         // ItemStack itemstack1 = addItem(iinventory, this.splitStack(i, 1), enumdirection);
 
+                        // TacoSpigot start - add an option to turn of InventoryMoveItemEvent
+                        final ItemStack originalStack = this.splitStack(i, world.spigotConfig.hopperAmount);
+                        final ItemStack stack;
+                        if (HopperHelper.isFireInventoryMoveItemEvent(this)) {
                         // CraftBukkit start - Call event when pushing items into other inventories
-                        CraftItemStack oitemstack = CraftItemStack.asCraftMirror(this.splitStack(i, world.spigotConfig.hopperAmount)); // Spigot
+                        CraftItemStack oitemstack = CraftItemStack.asCraftMirror(originalStack); // Spigot
+                        // TacoSpigot end
 
                         Inventory destinationInventory;
                         // Have to special case large chests as they work oddly
@@ -283,11 +288,23 @@ public class TileEntityHopper extends TileEntityContainer implements IHopper, IU
                             this.d(world.spigotConfig.hopperTransfer); // Spigot
                             return false;
                         }
-                        int origCount = event.getItem().getAmount(); // Spigot
-                        ItemStack itemstack1 = addItem(iinventory, CraftItemStack.asNMSCopy(event.getItem()), enumdirection);
+                        // TacoSpigot start
+                        stack = CraftItemStack.asNMSCopy(event.getItem());
+                        // handle cases where the event is not fired
+                        } else {
+                            /*
+                             * Normally, vanilla would require us to call 'iinventory.update()'
+                             * craftbukkit logic below calls update() if 'stack.equals(originalStack)'
+                             * Since we set 'stack' to be the same as 'orgiginalStack' they will be eaual, and update
+                             */
+                            stack = originalStack;
+                        }
+                        int origCount = stack.count; // Spigot
+                        ItemStack itemstack1 = addItem(iinventory, stack, enumdirection);
+                        // TacoSpigot end
 
                         if (itemstack1 == null || itemstack1.count == 0) {
-                            if (event.getItem().equals(oitemstack)) {
+                            if (stack.equals(originalStack)) { // TacoSpigot
                                 iinventory.update();
                             } else {
                                 this.setItem(i, itemstack);
@@ -416,8 +433,13 @@ public class TileEntityHopper extends TileEntityContainer implements IHopper, IU
         if (itemstack != null && b(iinventory, itemstack, i, enumdirection)) {
             ItemStack itemstack1 = itemstack.cloneItemStack();
             // ItemStack itemstack2 = addItem(ihopper, iinventory.splitStack(i, 1), (EnumDirection) null);
+            // TacoSpigot start - add an option to turn of InventoryMoveItemEvent
+            final ItemStack originalStack = iinventory.splitStack(i, ihopper.getWorld().spigotConfig.hopperAmount);
+            final ItemStack stack;
+            if (HopperHelper.isFireInventoryMoveItemEvent(ihopper)) {
             // CraftBukkit start - Call event on collection of items from inventories into the hopper
-            CraftItemStack oitemstack = CraftItemStack.asCraftMirror(iinventory.splitStack(i, ihopper.getWorld().spigotConfig.hopperAmount)); // Spigot
+            CraftItemStack oitemstack = CraftItemStack.asCraftMirror(originalStack); // Spigot
+            // TacoSpigot end
 
             Inventory sourceInventory;
             // Have to special case large chests as they work oddly
@@ -440,11 +462,23 @@ public class TileEntityHopper extends TileEntityContainer implements IHopper, IU
                 }
                 return false;
             }
-            int origCount = event.getItem().getAmount(); // Spigot
-            ItemStack itemstack2 = addItem(ihopper, CraftItemStack.asNMSCopy(event.getItem()), null);
+            // TacoSpigot start
+            stack = CraftItemStack.asNMSCopy(event.getItem());
+            // handle cases where the event is not firedgol
+            } else {
+                /*
+                 * Normally, vanilla would require us to call 'iinventory.update()'
+                 * craftbukkit logic below calls update() if 'stack.equals(originalStack)'
+                 * Since we set 'stack' to be the same as 'orgiginalStack' they will be eaual, and update
+                 */
+                stack = originalStack;
+            }
+            int origCount = stack.count; // Spigot
+            ItemStack itemstack2 = addItem(ihopper, stack, null);
+            // TacoSpigot end
 
             if (itemstack2 == null || itemstack2.count == 0) {
-                if (event.getItem().equals(oitemstack)) {
+                if (stack.equals(originalStack)) { // TacoSpigot
                     iinventory.update();
                 } else {
                     iinventory.setItem(i, itemstack1);
diff --git a/src/main/java/net/techcable/tacospigot/HopperHelper.java b/src/main/java/net/techcable/tacospigot/HopperHelper.java
index e3d952e..5163f48 100644
--- a/src/main/java/net/techcable/tacospigot/HopperHelper.java
+++ b/src/main/java/net/techcable/tacospigot/HopperHelper.java
@@ -3,11 +3,14 @@ package net.techcable.tacospigot;
 import net.minecraft.server.Block;
 import net.minecraft.server.BlockChest;
 import net.minecraft.server.BlockPosition;
+import net.minecraft.server.IHopper;
 import net.minecraft.server.IInventory;
 import net.minecraft.server.TileEntity;
 import net.minecraft.server.TileEntityHopper;
 import net.minecraft.server.World;
 
+import org.bukkit.event.inventory.InventoryMoveItemEvent;
+
 public class HopperHelper {
 
     public static TileEntityHopper getHopper(World world, BlockPosition pos) {
@@ -30,4 +33,7 @@ public class HopperHelper {
         return null;
     }
 
+    public static boolean isFireInventoryMoveItemEvent(IHopper hopper) {
+        return hopper.getWorld().tacoSpigotConfig.isHopperFireIMIE && InventoryMoveItemEvent.getHandlerList().getRegisteredListeners().length > 0;
+    }
 }
diff --git a/src/main/java/net/techcable/tacospigot/TacoSpigotWorldConfig.java b/src/main/java/net/techcable/tacospigot/TacoSpigotWorldConfig.java
index c012c8d..c1f297c 100644
--- a/src/main/java/net/techcable/tacospigot/TacoSpigotWorldConfig.java
+++ b/src/main/java/net/techcable/tacospigot/TacoSpigotWorldConfig.java
@@ -69,6 +69,11 @@ public class TacoSpigotWorldConfig {
         isHopperPushBased = getBoolean("hopper.push-based", true);
     }
 
+    public boolean isHopperFireIMIE;
+    private void isHopperFireIMIE() {
+        isHopperFireIMIE = getBoolean("hopper.fire-InventoryMoveItemEvent", true);
+    }
+
     public boolean optimizeArmorStandMovement;
     private void isArmorStandMoveWithoutGravity() {
         optimizeArmorStandMovement = getBoolean("armor-stand.optimize-movement", false); // Doesn't fully emulate vanilla behavior, see issue #1
-- 
2.7.0

