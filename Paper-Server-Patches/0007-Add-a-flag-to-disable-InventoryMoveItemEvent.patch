From 963e09701ea9bc3819411b38810eb1f0bc0bf8ce Mon Sep 17 00:00:00 2001
From: Techcable <Techcable@outlook.com>
Date: Wed, 3 Feb 2016 11:27:34 -0700
Subject: [PATCH] Add a flag to disable InventoryMoveItemEvent

Even with no listeners, InventoryMoveItemEvent hurts performance.
This patch prevents the event from firing if there are no listeners
Some plugins offer no way to disable their IMIE listeners. (See WorldGuard-3520)
This patch adds a per-world flag to disable InventoryMoveItemEvent for hoppers.

diff --git a/src/main/java/net/minecraft/server/TileEntityHopper.java b/src/main/java/net/minecraft/server/TileEntityHopper.java
index eaf06ddbf..37b3ddab1 100644
--- a/src/main/java/net/minecraft/server/TileEntityHopper.java
+++ b/src/main/java/net/minecraft/server/TileEntityHopper.java
@@ -12,6 +12,9 @@ import org.bukkit.event.inventory.InventoryMoveItemEvent;
 import org.bukkit.event.inventory.InventoryPickupItemEvent;
 import org.bukkit.inventory.Inventory;
 // CraftBukkit end
+// TacoSpigot start
+import org.bukkit.craftbukkit.entity.CraftItem;
+// TacoSpigot end
 
 public class TileEntityHopper extends TileEntityLootable implements IHopper, ITickable {
 
@@ -210,7 +213,10 @@ public class TileEntityHopper extends TileEntityLootable implements IHopper, ITi
 
                         // CraftBukkit start - Call event when pushing items into other inventories
                         CraftItemStack oitemstack = CraftItemStack.asCraftMirror(this.splitStack(i, world.spigotConfig.hopperAmount)); // Spigot
-
+                        // TacoSpigot start - option to disable event
+                        final org.bukkit.inventory.ItemStack stack;
+                        if (this.getWorld().tacoSpigotConfig.isHopperFireIMIE && InventoryMoveItemEvent.getHandlerList().getRegisteredListeners().length > 0) {
+                            // TacoSpigot end
                         Inventory destinationInventory;
                         // Have to special case large chests as they work oddly
                         if (iinventory instanceof InventoryLargeChest) {
@@ -233,6 +239,17 @@ public class TileEntityHopper extends TileEntityLootable implements IHopper, ITi
                         // Paper end
                         if (itemstack1.isEmpty()) {
                             if (eventStack.equals(oitemstack)) { // Paper
+                            // TacoSpigot start
+                            stack = eventStack;
+                        } else {
+                            stack = oitemstack;
+                        }
+                        int origCount = stack.getAmount(); // Spigot
+                        ItemStack itemstack1 = addItem(this, iinventory, CraftItemStack.asNMSCopy(stack), enumdirection);
+                        // TacoSpigot end
+
+                        if (itemstack1.isEmpty()) {
+                            if (stack.equals(oitemstack)) { // TacoSpigot - 'event.getItem' -> stack
                                 iinventory.update();
                             } else {
                                 this.setItem(i, itemstack);
@@ -370,6 +387,10 @@ public class TileEntityHopper extends TileEntityLootable implements IHopper, ITi
             // ItemStack itemstack2 = addItem(iinventory, ihopper, iinventory.splitStack(i, 1), (EnumDirection) null);
             // CraftBukkit start - Call event on collection of items from inventories into the hopper
             CraftItemStack oitemstack = CraftItemStack.asCraftMirror(iinventory.splitStack(i, ihopper.getWorld().spigotConfig.hopperAmount)); // Spigot
+            // TacoSpigot start - option to disable event
+            final org.bukkit.inventory.ItemStack stack;
+            if (ihopper.getWorld().tacoSpigotConfig.isHopperFireIMIE && InventoryMoveItemEvent.getHandlerList().getRegisteredListeners().length > 0) {
+                // TacoSpigot end
 
             Inventory sourceInventory;
             // Have to special case large chests as they work oddly
@@ -399,6 +420,17 @@ public class TileEntityHopper extends TileEntityLootable implements IHopper, ITi
             // Paper end
             if (itemstack2.isEmpty()) {
                 if (eventStack.equals(oitemstack)) { // Paper
+                // TacoSpigot start
+                stack = eventStack;
+            } else {
+                stack = oitemstack;
+            }
+            int origCount = stack.getAmount(); // Spigot
+            ItemStack itemstack2 = addItem(iinventory, ihopper, CraftItemStack.asNMSCopy(stack), null);
+            // TacoSpigot end
+
+            if (itemstack2.isEmpty()) {
+                if (stack.equals(oitemstack)) { // TacoSpigot - 'event.getItem()' -> stack
                     iinventory.update();
                 } else {
                     iinventory.setItem(i, itemstack1);
diff --git a/src/main/java/net/techcable/tacospigot/TacoSpigotWorldConfig.java b/src/main/java/net/techcable/tacospigot/TacoSpigotWorldConfig.java
index 2bc587722..4cc7b6929 100644
--- a/src/main/java/net/techcable/tacospigot/TacoSpigotWorldConfig.java
+++ b/src/main/java/net/techcable/tacospigot/TacoSpigotWorldConfig.java
@@ -17,6 +17,11 @@ public class TacoSpigotWorldConfig {
         init();
     }
 
+    public boolean isHopperFireIMIE;
+    private void isHopperFireIMIE() {
+        isHopperFireIMIE = getBoolean("hopper.fire-InventoryMoveItemEvent", true);
+    }
+
     public void init() {
         this.verbose = getBoolean("verbose", true);
 
-- 
2.11.0

