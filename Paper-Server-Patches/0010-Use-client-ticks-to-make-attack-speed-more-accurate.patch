From 273628d990d4fd060b5498f0900a3d19a127e775 Mon Sep 17 00:00:00 2001
From: Jedediah Smith <jedediah@silencegreys.com>
Date: Tue, 19 Apr 2016 20:30:55 -0400
Subject: [PATCH] Use client ticks to make attack speed more accurate


diff --git a/src/main/java/net/minecraft/server/EntityHuman.java b/src/main/java/net/minecraft/server/EntityHuman.java
index af173a13..f12960f4 100644
--- a/src/main/java/net/minecraft/server/EntityHuman.java
+++ b/src/main/java/net/minecraft/server/EntityHuman.java
@@ -21,6 +21,8 @@ import org.bukkit.event.player.PlayerVelocityEvent;
 import org.bukkit.util.Vector;
 // CraftBukkit end
 
+import static net.techcable.tacospigot.TacoSpigotConfig.betterPvp; // TacoSpigot
+
 public abstract class EntityHuman extends EntityLiving {
 
     private static final DataWatcherObject<Float> a = DataWatcher.a(EntityHuman.class, DataWatcherRegistry.c);
@@ -63,6 +65,9 @@ public abstract class EntityHuman extends EntityLiving {
     private final ItemCooldown bV;
     @Nullable
     public EntityFishingHook hookedFish;
+
+    public int clientTicksSinceLastAttack; // TacoSpigot
+
     public boolean affectsSpawning = true;
 
     // CraftBukkit start
@@ -1889,11 +1894,25 @@ public abstract class EntityHuman extends EntityLiving {
     }
 
     public float o(float f) {
-        return MathHelper.a(((float) this.aE + f) / this.dg(), 0.0F, 1.0F);
+        // TacoSpigot start - use both client and server ticks
+        if (betterPvp) {
+            return MathHelper.a(
+                (float) (Math.max(
+                     this.aE,
+                     this.clientTicksSinceLastAttack
+                ) + f) / this.dg(),
+                0.0F,
+                1.0F
+            );
+        } else {
+            return MathHelper.a(((float) this.aE + f) / this.dg(), 0.0F, 1.0F);
+        }
+        // TacoSpigot end
     }
 
     public void dh() {
         this.aE = 0;
+        this.clientTicksSinceLastAttack = 0; // TacoSpigot
     }
 
     public ItemCooldown di() {
diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index 0e2f43b9..2630053b 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -463,6 +463,8 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
                     this.syncPosition();
                 }
 
+                this.player.clientTicksSinceLastAttack++; // TacoSpigot
+
                 if (this.teleportPos != null) {
                     if (this.e - this.A > 20) {
                         this.A = this.e;
diff --git a/src/main/java/net/techcable/tacospigot/TacoSpigotConfig.java b/src/main/java/net/techcable/tacospigot/TacoSpigotConfig.java
index b7699d8c..22c6009a 100644
--- a/src/main/java/net/techcable/tacospigot/TacoSpigotConfig.java
+++ b/src/main/java/net/techcable/tacospigot/TacoSpigotConfig.java
@@ -107,4 +107,9 @@ public class TacoSpigotConfig {
     private static void useArraysForBlockStates() {
         useArraysForBlockStates = getBoolean("useArraysForBlockStates", false);
     }
+
+    public static boolean betterPvp;
+    private static void betterPvp() {
+        betterPvp = getBoolean("betterPvp", false);
+    }
 }
-- 
2.12.2

