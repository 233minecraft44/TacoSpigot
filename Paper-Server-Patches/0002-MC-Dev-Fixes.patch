From 760f3571c1f8b8c11f139d1e6bb33fa11103d58e Mon Sep 17 00:00:00 2001
From: Techcable <Techcable@techcable.net>
Date: Sun, 3 Apr 2016 14:05:27 -0700
Subject: [PATCH] MC-Dev Fixes

Sometimes fernflower makes mistakes too

diff --git a/src/main/java/net/minecraft/server/BlockStateEnum.java b/src/main/java/net/minecraft/server/BlockStateEnum.java
index 66c459d..9f43b2b 100644
--- a/src/main/java/net/minecraft/server/BlockStateEnum.java
+++ b/src/main/java/net/minecraft/server/BlockStateEnum.java
@@ -27,7 +27,7 @@ public class BlockStateEnum<T extends Enum<T> & INamable> extends BlockState<T>
         Iterator iterator = collection.iterator();
 
         while (iterator.hasNext()) {
-            Enum oenum = (Enum) iterator.next();
+            T oenum = (T) iterator.next(); // TacoSpigot - fix decompile error
             String s1 = ((INamable) oenum).getName();
 
             if (this.b.containsKey(s1)) {
diff --git a/src/main/java/net/minecraft/server/BlockStateList.java b/src/main/java/net/minecraft/server/BlockStateList.java
index edea58b..e4d1e48 100644
--- a/src/main/java/net/minecraft/server/BlockStateList.java
+++ b/src/main/java/net/minecraft/server/BlockStateList.java
@@ -87,7 +87,7 @@ public class BlockStateList {
         if (!BlockStateList.a.matcher(s).matches()) {
             throw new IllegalArgumentException("Block: " + block.getClass() + " has invalidly named property: " + s);
         } else {
-            Iterator iterator = iblockstate.c().iterator();
+            Iterator<T> iterator = iblockstate.c().iterator(); // TacoSpigot - generic iterator
 
             String s1;
 
@@ -96,7 +96,7 @@ public class BlockStateList {
                     return s;
                 }
 
-                Comparable comparable = (Comparable) iterator.next();
+                T comparable = iterator.next(); // TacoSpigot - fix fernflower error
 
                 s1 = iblockstate.a(comparable);
             } while (BlockStateList.a.matcher(s1).matches());
@@ -165,7 +165,7 @@ public class BlockStateList {
             if (comparable == null) {
                 throw new IllegalArgumentException("Cannot get property " + iblockstate + " as it does not exist in " + this.a.s());
             } else {
-                return (Comparable) iblockstate.b().cast(comparable);
+                return iblockstate.b().cast(comparable); // TacoSpigot - fix fernflower error
             }
         }
 
diff --git a/src/main/java/net/minecraft/server/PacketEncoder.java b/src/main/java/net/minecraft/server/PacketEncoder.java
index a79fa01..a21743d 100644
--- a/src/main/java/net/minecraft/server/PacketEncoder.java
+++ b/src/main/java/net/minecraft/server/PacketEncoder.java
@@ -19,7 +19,7 @@ public class PacketEncoder extends MessageToByteEncoder<Packet<?>> {
         this.c = enumprotocoldirection;
     }
 
-    protected void a(ChannelHandlerContext channelhandlercontext, Packet<?> packet, ByteBuf bytebuf) throws Exception {
+    protected void encode(ChannelHandlerContext channelhandlercontext, Packet<?> packet, ByteBuf bytebuf) throws Exception { // TacoSpigot - fix decompiler issue
         Integer integer = ((EnumProtocol) channelhandlercontext.channel().attr(NetworkManager.c).get()).a(this.c, packet);
 
         if (PacketEncoder.a.isDebugEnabled()) {
@@ -42,7 +42,11 @@ public class PacketEncoder extends MessageToByteEncoder<Packet<?>> {
         }
     }
 
+    // TacoSpigot start - remove decompiler error
+    /*
     protected void encode(ChannelHandlerContext channelhandlercontext, Object object, ByteBuf bytebuf) throws Exception {
         this.a(channelhandlercontext, (Packet) object, bytebuf);
     }
+    */
+    // TacoSpigot end
 }
-- 
2.10.2

